name: OneFlow Serving

on:
  pull_request:
    types: [review_requested]
    branches:
      - "*"
  release:
    types:
      - published
  schedule:
    - cron: "0 18 * * *"
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker image tag"
        required: true
        type: string

env:
  TRITON_CONTAINER_VERSION: "21.10"
  SERVING_IMAGE: "oneflow-serving"
  MANYLINUX_CACHE_DIR: ~/manylinux-cache-dir/triton-cu114
  WHEELHOUSE_DIR: manylinux-wheelhouse
  REGION_ID: cn-beijing
  REGISTRY: registry.cn-beijing.aliyuncs.com
  NAMESPACE: oneflow

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cancel_previous:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || (github.event.pull_request.draft == false && github.base_ref == 'main' && contains(github.event.pull_request.requested_reviewers.*.login, 'oneflow-ci-bot'))
    steps:
      - name: Cancel previous runs of outdated commit
        if: github.ref != 'refs/heads/main'
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

  build_test:
    name: Build oneflow and backend
    runs-on: [self-hosted, linux, provision]
    needs: [cancel_previous]
    if: github.event_name == 'release' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || (github.event.pull_request.draft == false && github.base_ref == 'main' && contains(github.event.pull_request.requested_reviewers.*.login, 'oneflow-ci-bot'))
    outputs:
      image_tag: ${{ steps.output-step.outputs.image_tag }}
      acr_image_tag: ${{ steps.output-step.outputs.acr_image_tag }}
    steps:
      - name: Fix permissions
        run: |
          docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
      - uses: actions/checkout@v2
      - name: Clone oneflow
        run: |
          git clone https://github.com/Oneflow-Inc/oneflow --depth=1
      - name: Set environment variables
        run: |
          set -x
          extra_docker_args=""
          manylinux_cache_dir=${{ env.MANYLINUX_CACHE_DIR }}
          container_name=serving-build-run-id-${{ github.run_id }}-${{ github.run_number }}-test
          extra_docker_args+=" --runtime=nvidia"
          extra_docker_args+=" --detach"
          extra_docker_args+=" --name ${container_name}"
          extra_docker_args+=" --shm-size=8g --rm -w $PWD -v $PWD:$PWD"
          extra_docker_args+=" -v $manylinux_cache_dir:$manylinux_cache_dir"
          extra_docker_args+=" --network=host"
          extra_docker_args+=" -e HTTPS_PROXY -e HTTP_PROXY"
          extra_docker_args+=" --env TRITON_VERSION=${{ env.TRITON_VERSION }}"
          extra_docker_args+=" --env ONEFLOW_CI_SRC_DIR=$PWD/oneflow"
          extra_docker_args+=" --env ONEFLOW_CI_BUILD_DIR=$manylinux_cache_dir/build"
          extra_docker_args+=" --env WHEELHOUSE_DIR=${{ env.WHEELHOUSE_DIR }}"
          extra_docker_args+=" --env PYTHONPATH=$PWD/oneflow/python"
          extra_docker_args+=" --env ONEFLOW_CI_CMAKE_INIT_CACHE=$PWD/oneflow/cmake/caches/ci/serving/cuda-75.cmake"
          echo "extra_docker_args=${extra_docker_args}" >> $GITHUB_ENV
          echo "container_name=${container_name}" >> $GITHUB_ENV
          echo "image_tag=registry.cn-beijing.aliyuncs.com/oneflow/triton-devel:latest" >> $GITHUB_ENV
      - name: Build oneflow
        run: |
          docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
          docker run --rm -v ${{ env.MANYLINUX_CACHE_DIR }}:/p -w /p busybox chmod -R o+w .
          docker pull ${{ env.image_tag }}
          docker run $extra_docker_args ${{ env.image_tag }} sleep 3600
          docker exec ${{ env.container_name }} /bin/bash $PWD/oneflow/ci/manylinux/build-gcc7.sh

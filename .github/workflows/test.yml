name: OneFlow Serving

on:
  push:
    branches:
      - "*"
  release:
    types:
      - published

jobs:
  cancel_previous:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs of outdated commit
        if: github.ref != 'refs/heads/master'
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

  test_upload:
    name: Test upload
    runs-on: self-hosted
    needs: [cancel_previous]
    steps:
      - echo "file to be upload" > 

  # build_oneflow:
  #   name: Build oneFlow
  #   runs-on: self-hosted
  #   needs: [cancel_previous]
  #   steps: 
  #     - name: Fix permissions
  #       run: |
  #         docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
  #     - name: Checkout oneflow
  #       uses: actions/checkout@v2
  #       with:
  #         repository: 'Oneflow-Inc/oneflow'
  #     - name: Set environment variables
  #       env:
  #         TRITON_VERSION: "21.10"
  #       run: |
  #         set -x
  #         extra_docker_args=""
  #         container_name=serving-build-run-id-${{ github.run_id }}-test
  #         extra_docker_args+=" --runtime=nvidia"
  #         extra_docker_args+=" --name ${container_name}"
  #         extra_docker_args+=" --shm-size=8g -w $PWD -v $PWD:$PWD"
  #         extra_docker_args+=" --env TRITON_VERSION=${{ env.TRITON_VERSION }}"
  #         echo "extra_docker_args=${extra_docker_args}" >> $GITHUB_ENV
  #         echo "container_name=${container_name}" >> $GITHUB_ENV
  #         echo "image_tag=triton-devel" >> $GITHUB_ENV
  #     - name: Build oneflow and backend
  #       run: |
  #         docker run $extra_docker_args ${{ env.image_tag }} /bin/bash ci/build.sh
  #     - name: Fix permissions
  #       run: |
  #         docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
  #     - name: Copy tritonserver
  #       run: |
  #         docker cp ${{ env.container_name }}:/opt/tritonserver/bin/tritonserver .
  #         docker cp ${{ env.container_name }}:/opt/tritonserver/lib .
  #         docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libb64.so.0d ./oneflow/build/liboneflow_cpp/lib/
  #         docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libb64.so ./oneflow/build/liboneflow_cpp/lib/
  #         docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libdcgm.so.2.2.9 ./oneflow/build/liboneflow_cpp/lib/
  #         docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libdcgm.so.2 ./oneflow/build/liboneflow_cpp/lib/
  #         docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libre2.so.5.0.0 ./oneflow/build/liboneflow_cpp/lib/
  #         docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libre2.so.5 ./oneflow/build/liboneflow_cpp/lib/
  #     - name: Remove container
  #       run: |
  #         docker container rm ${{ env.container_name }}

  build_oneflow:
    name: Build oneFlow and backend
    runs-on: self-hosted
    needs: [cancel_previous]
    steps: 
      - name: Fix permissions
        run: |
          docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
      # - uses: actions/checkout@v2
      # - name: Clone oneflow
      #   run: git clone https://github.com/Oneflow-Inc/oneflow --depth=1
      - name: Set environment variables
        env:
          TRITON_VERSION: "21.10"
        run: |
          set -x
          extra_docker_args=""
          container_name=serving-build-run-id-${{ github.run_id }}-test
          extra_docker_args+=" --runtime=nvidia"
          extra_docker_args+=" --name ${container_name}"
          extra_docker_args+=" --shm-size=8g -w $PWD -v $PWD:$PWD"
          extra_docker_args+=" --env TRITON_VERSION=${{ env.TRITON_VERSION }}"
          echo "extra_docker_args=${extra_docker_args}" >> $GITHUB_ENV
          echo "container_name=${container_name}" >> $GITHUB_ENV
          echo "image_tag=triton-devel" >> $GITHUB_ENV
      - name: Build oneflow and backend
        run: |
          docker run $extra_docker_args ${{ env.image_tag }} /bin/bash ci/build.sh
      - name: Fix permissions
        run: |
          docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
      - name: Copy tritonserver
        run: |
          docker cp ${{ env.container_name }}:/opt/tritonserver/bin/tritonserver .
          docker cp ${{ env.container_name }}:/opt/tritonserver/lib .
          docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libb64.so.0d ./oneflow/build/liboneflow_cpp/lib/
          docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libb64.so ./oneflow/build/liboneflow_cpp/lib/
          docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libdcgm.so.2.2.9 ./oneflow/build/liboneflow_cpp/lib/
          docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libdcgm.so.2 ./oneflow/build/liboneflow_cpp/lib/
          docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libre2.so.5.0.0 ./oneflow/build/liboneflow_cpp/lib/
          docker cp ${{ env.container_name }}:/usr/lib/x86_64-linux-gnu/libre2.so.5 ./oneflow/build/liboneflow_cpp/lib/
      - name: Remove container
        run: |
          docker container rm ${{ env.container_name }}

  make_user_image:
    name: Make user image
    runs-on: self-hosted
    needs: [build_oneflow]
    steps:
      - name: Fix permissions
        run: |
          docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
      - name: Set environment variables
        env:
          TRITON_VERSION: "21.10"
          SERVING_IMAGE: "oneflow-serving:${{ github.ref_name }}"
        run: |
          set -x
          extra_docker_args=""
          container_name=user-image-run-id-${{ github.run_id }}-test
          extra_docker_args+=" --runtime=nvidia"
          extra_docker_args+=" --detach"
          extra_docker_args+=" --name ${container_name}"
          extra_docker_args+=" --shm-size=8g --rm -w $PWD -v $PWD:$PWD"
          echo "extra_docker_args=${extra_docker_args}" >> $GITHUB_ENV
          echo "container_name=${container_name}" >> $GITHUB_ENV
          echo "image_tag=${{ env.SERVING_IMAGE }}" >> $GITHUB_ENV
      - name: Make user docker image
        run: |
          mkdir -p context
          cp -r oneflow/build/liboneflow_cpp/ context/
          cp oneflow-backend/build/libtriton_oneflow.so context/
          cp tritonserver context/
          cp -r lib/ context/
          docker build -f ci/Dockerfile.serving context/ -t ${{ env.image_tag }}
      - name: Test
        run: |
          docker run $extra_docker_args ${{ env.image_tag }} sleep 3600
          docker exec ${{ env.container_name }} apt update
          docker exec ${{ env.container_name }} apt install -y python3 python3-pip
          docker exec -w $(pwd)/ci ${{ env.container_name }} pip3 install -r requirement.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
          docker exec -w $(pwd)/ci ${{ env.container_name }} bash ./run_tests.sh
      - name: Remove container
        run: |
          docker container rm -f ${{ env.container_name }}
      - name: Remove image
        # if: ${{ github.event_name != 'release' }}
        run: |
          docker rmi $(docker images '${{ env.SERVING_NAME }}' -a -q)
